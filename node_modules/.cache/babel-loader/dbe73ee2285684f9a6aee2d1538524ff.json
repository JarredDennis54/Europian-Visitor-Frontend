{"ast":null,"code":"var _jsxFileName = \"/Users/macinthoshhdd/Desktop/European_Tourists/frontend/src/components/common/Categorycard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFavourite, deleteFavourite } from '../../reducks/favorites/operations';\nimport { getFavourites } from '../../reducks/favorites/selectors';\nimport { push } from 'connected-react-router';\nimport like from '../../assets/img/heart.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Categorycard = ({\n  place\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const clickFavourite = place => {\n    dispatch(addFavourite(place));\n  };\n\n  const selector = useSelector(state => state);\n  const favourites = getFavourites(selector);\n  const [showLikeButton, setShowLikeButton] = useState(true);\n  useEffect(() => {\n    let favoritePlace = favourites.filter(favourite => favourite.id == place.id);\n\n    if (favoritePlace.length > 0) {\n      setShowLikeButton(false);\n    }\n  }, [favourites]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"Tour-images\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"Tour-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: place.image,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: place.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: place.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: like,\n          id: \"like\",\n          onClick: () => {\n            setShowLikeButton(!showLikeButton);\n\n            if (showLikeButton) {\n              clickFavourite(place);\n            } else {\n              dispatch(deleteFavourite(place.id));\n            }\n          },\n          style: {\n            backgroundColor: showLikeButton ? \"white\" : \"red\"\n          },\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Categorycard, \"xZKIlXOsp5XShWgoKa47hK7raw4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Categorycard;\nexport default Categorycard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categorycard\");","map":{"version":3,"sources":["/Users/macinthoshhdd/Desktop/European_Tourists/frontend/src/components/common/Categorycard.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","addFavourite","deleteFavourite","getFavourites","push","like","Categorycard","place","dispatch","clickFavourite","selector","state","favourites","showLikeButton","setShowLikeButton","favoritePlace","filter","favourite","id","length","image","name","description","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAAQC,YAAR,EAAqBC,eAArB,QAA2C,oCAA3C;AACA,SAASC,aAAT,QAA8B,mCAA9B;AACA,SAASC,IAAT,QAAqB,wBAArB;AAIA,OAAOC,IAAP,MAAiB,4BAAjB;;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAChC,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AACA,QAAMU,cAAc,GAAIF,KAAD,IAAW;AAChCC,IAAAA,QAAQ,CAACP,YAAY,CAACM,KAAD,CAAb,CAAR;AACD,GAFD;;AAGA,QAAMG,QAAQ,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAZ,CAA5B;AACA,QAAMC,UAAU,GAAGT,aAAa,CAACO,QAAD,CAAhC;AACA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsChB,QAAQ,CAAC,IAAD,CAApD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,aAAa,GAAGH,UAAU,CAACI,MAAX,CACjBC,SAAD,IAAeA,SAAS,CAACC,EAAV,IAAgBX,KAAK,CAACW,EADnB,CAApB;;AAGA,QAAIH,aAAa,CAACI,MAAd,GAAuB,CAA3B,EAA8B;AAC5BL,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;AACF,GAPQ,EAON,CAACF,UAAD,CAPM,CAAT;AAQF,sBACE;AAAA,2BACA;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA,6BACI;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEL,KAAK,CAACa,KAAhB;AAAuB,UAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAIb,KAAK,CAACc;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAId,KAAK,CAACe;AAAV;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAK,UAAA,GAAG,EAAEjB,IAAV;AAAgB,UAAA,EAAE,EAAC,MAAnB;AACA,UAAA,OAAO,EAAE,MAAM;AACXS,YAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;;AACA,gBAAIA,cAAJ,EAAoB;AAClBJ,cAAAA,cAAc,CAACF,KAAD,CAAd;AACD,aAFD,MAEO;AACLC,cAAAA,QAAQ,CAACN,eAAe,CAACK,KAAK,CAACW,EAAP,CAAhB,CAAR;AACD;AACF,WARH;AASE,UAAA,KAAK,EAAE;AAAEK,YAAAA,eAAe,EAAEV,cAAc,GAAG,OAAH,GAAa;AAA9C,WATT;AAUE,UAAA,GAAG,EAAC;AAVN;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAsBD,CAtCD;;GAAMP,Y;UACeP,W,EAIAC,W;;;KALfM,Y;AAwCN,eAAeA,YAAf","sourcesContent":["import React, { useEffect,useState} from 'react'\nimport { useDispatch,useSelector } from 'react-redux';\nimport {addFavourite,deleteFavourite} from '../../reducks/favorites/operations'\nimport { getFavourites } from '../../reducks/favorites/selectors';\nimport { push } from 'connected-react-router';\n\n\n\nimport like from '../../assets/img/heart.png'\n\nconst Categorycard = ({ place }) => {\n    const dispatch = useDispatch();\n    const clickFavourite = (place) => {\n      dispatch(addFavourite(place));\n    };\n    const selector = useSelector((state) => state);\n    const favourites = getFavourites(selector);\n    const [showLikeButton, setShowLikeButton] = useState(true);\n    useEffect(() => {\n      let favoritePlace = favourites.filter(\n        (favourite) => favourite.id == place.id\n      );\n      if (favoritePlace.length > 0) {\n        setShowLikeButton(false);\n      }\n    }, [favourites]);\n  return (\n    <>\n    <div class=\"Tour-images\">\n        <div class=\"Tour-1\">\n            <img src={place.image} alt=\"\" />\n            <p>{place.name}</p>\n            <p>{place.description}</p>\n            <img src={like} id=\"like\"\n            onClick={() => {\n                setShowLikeButton(!showLikeButton);\n                if (showLikeButton) {\n                  clickFavourite(place);\n                } else {\n                  dispatch(deleteFavourite(place.id));\n                }\n              }}\n              style={{ backgroundColor: showLikeButton ? \"white\" : \"red\" }}\n              alt=\"\"/>\n        </div>\n    </div>\n    </>\n  )\n}\n\nexport default Categorycard\n"]},"metadata":{},"sourceType":"module"}