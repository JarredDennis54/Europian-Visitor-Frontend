{"ast":null,"code":"var _jsxFileName = \"/Users/macinthoshhdd/Desktop/European_Tourists/frontend/src/containers/Places.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport queryString from 'query-string';\nimport { fetchPlaces } from '../reducks/places/operations';\nimport { getPlaces } from '../reducks/places/selectors';\nimport { fetchFromLocalStorage } from '../reducks/favorites/operations';\nimport Card from '../components/common/Card';\nimport Header from '../components/common/Header';\nimport Footer from '../components/common/Footer';\nimport Search from '../components/common/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Places = props => {\n  _s();\n\n  const parsed = queryString.parse(window.location.search);\n  const [search, setSearch] = useState(null);\n  const [category, setCategory] = useState(null);\n  const dispatch = useDispatch();\n  const selector = useSelector(state => state);\n  const places = getPlaces(selector);\n  useEffect(() => {\n    dispatch(fetchFromLocalStorage());\n\n    if (parsed.search !== undefined) {\n      setSearch(parsed.search);\n    }\n\n    if (parsed.category !== undefined) {\n      setCategory(parsed.category);\n    }\n  }, []);\n  useEffect(() => {\n    if (search != null || category != null) {\n      dispatch(fetchPlaces(search, category));\n    }\n  }, [search, category]);\n  const placeid = props.match.params.id;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"header-input\",\n        children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), places.map(place => {\n        return place.id == placeid && /*#__PURE__*/_jsxDEV(Card, {\n          place: place\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Places, \"c+MfOi//acYdy0bNHZCn5HBkQEk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Places;\nexport default Places;\n\nvar _c;\n\n$RefreshReg$(_c, \"Places\");","map":{"version":3,"sources":["/Users/macinthoshhdd/Desktop/European_Tourists/frontend/src/containers/Places.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","queryString","fetchPlaces","getPlaces","fetchFromLocalStorage","Card","Header","Footer","Search","Places","props","parsed","parse","window","location","search","setSearch","category","setCategory","dispatch","selector","state","places","undefined","placeid","match","params","id","map","place"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAsC,OAAtC;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,qBAAT,QAAsC,iCAAtC;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;;;AAIA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,MAAM,GAAGV,WAAW,CAACW,KAAZ,CAAkBC,MAAM,CAACC,QAAP,CAAgBC,MAAlC,CAAf;AACA,QAAM,CAACA,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAMqB,QAAQ,GAAGpB,WAAW,EAA5B;AACA,QAAMqB,QAAQ,GAAGpB,WAAW,CAAEqB,KAAD,IAAWA,KAAZ,CAA5B;AACA,QAAMC,MAAM,GAAGnB,SAAS,CAACiB,QAAD,CAAxB;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,QAAQ,CAACf,qBAAqB,EAAtB,CAAR;;AAEA,QAAIO,MAAM,CAACI,MAAP,KAAkBQ,SAAtB,EAAiC;AAC/BP,MAAAA,SAAS,CAACL,MAAM,CAACI,MAAR,CAAT;AACD;;AACD,QAAIJ,MAAM,CAACM,QAAP,KAAoBM,SAAxB,EAAmC;AACjCL,MAAAA,WAAW,CAACP,MAAM,CAACM,QAAR,CAAX;AACD;AACF,GATQ,EASN,EATM,CAAT;AAUApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,MAAM,IAAI,IAAV,IAAkBE,QAAQ,IAAI,IAAlC,EAAwC;AACtCE,MAAAA,QAAQ,CAACjB,WAAW,CAACa,MAAD,EAASE,QAAT,CAAZ,CAAR;AACD;AACF,GAJQ,EAIN,CAACF,MAAD,EAASE,QAAT,CAJM,CAAT;AAKA,QAAMO,OAAO,GAACd,KAAK,CAACe,KAAN,CAAYC,MAAZ,CAAmBC,EAAjC;AACF,sBACE;AAAA,4BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAS,MAAA,KAAK,EAAC,QAAf;AAAA,8BACA;AAAK,QAAA,KAAK,EAAC,cAAX;AAAA,+BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADA,EAIaL,MAAM,CAACM,GAAP,CAAYC,KAAD,IAAW;AAC3B,eACEA,KAAK,CAACF,EAAN,IAAUH,OAAV,iBACF,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEK;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFA;AAGH,OAJQ,CAJb;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAYA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAZA;AAAA,kBADF;AAiBD,CAzCD;;GAAMpB,M;UAIeV,W,EACAC,W;;;KALfS,M;AA2CN,eAAeA,MAAf","sourcesContent":["import React,{useEffect,useState}from 'react';\nimport { useDispatch,useSelector } from 'react-redux';\nimport queryString from 'query-string'\nimport { fetchPlaces } from '../reducks/places/operations';\nimport { getPlaces } from '../reducks/places/selectors';\nimport { fetchFromLocalStorage } from '../reducks/favorites/operations';\nimport Card from '../components/common/Card';\nimport Header from '../components/common/Header';\nimport Footer from '../components/common/Footer';\nimport Search from '../components/common/Search';\n\n\n\nconst Places = (props) => {\n    const parsed = queryString.parse(window.location.search);\n    const [search, setSearch] = useState(null);\n    const [category, setCategory] = useState(null);\n    const dispatch = useDispatch();\n    const selector = useSelector((state) => state);\n    const places = getPlaces(selector);\n  \n    useEffect(() => {\n      dispatch(fetchFromLocalStorage());\n  \n      if (parsed.search !== undefined) {\n        setSearch(parsed.search);\n      }\n      if (parsed.category !== undefined) {\n        setCategory(parsed.category);\n      }\n    }, []);\n    useEffect(() => {\n      if (search != null || category != null) {\n        dispatch(fetchPlaces(search, category));\n      }\n    }, [search, category]);\n    const placeid=props.match.params.id\n  return (\n    <>\n    <Header/>\n    <section class=\"header\">\n    <div class=\"header-input\">\n    <Search  />\n                </div>\n                {places.map((place) => {\n            return (\n              place.id==placeid &&\n            <Card place={place} />)\n        })}\n            </section>\n    <Footer/>\n      \n    </>\n  );\n}\n\nexport default Places;\n"]},"metadata":{},"sourceType":"module"}