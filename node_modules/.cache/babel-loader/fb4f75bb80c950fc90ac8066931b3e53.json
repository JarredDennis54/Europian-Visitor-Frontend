{"ast":null,"code":"import API from \"../../API\";\nimport { addFavouritesAction, fetchFavouritesAction, deleteFavouritesAction } from \"./action\";\nconst api = new API();\nconst FAVOURITES_KEY = \"FAVOURITES_KEY\";\nexport const fetchFromLocalStorage = () => {\n  return async dispatch => {\n    let favouritsJSON = localStorage.getItem(FAVOURITES_KEY);\n    let favourites = [];\n\n    if (favouritsJSON) {\n      favourites = JSON.parse(favouritsJSON);\n    }\n\n    dispatch(fetchFavouritesAction(favourites));\n  };\n};\nexport const addFavourite = place => {\n  return async (dispatch, getState) => {\n    let prevFavourites = getState().favourites.list;\n    console.log(\"prevFavourites\", place);\n    let nextFavorites = prevFavourites;\n\n    if (!prevFavourites.some(favourite => favourite.id === place.id)) {\n      nextFavorites = [place, ...prevFavourites];\n    }\n\n    setToLocalStorage(nextFavorites);\n    dispatch(addFavouritesAction(nextFavorites));\n  };\n};\nexport const deleteFavourite = id => {\n  return async (dispatch, getState) => {\n    let prevFavourites = getState().favourites.list;\n    const nextFavourites = prevFavourites.filter(image => image.id !== id);\n    setToLocalStorage(nextFavourites);\n    dispatch(deleteFavouritesAction(nextFavourites));\n  };\n};\nexport const setToLocalStorage = favourites => {\n  localStorage.setItem(FAVOURITES_KEY, JSON.stringify(favourites));\n};","map":{"version":3,"sources":["/Users/macinthoshhdd/Desktop/European_Tourists/frontend/src/reducks/favorites/operations.js"],"names":["API","addFavouritesAction","fetchFavouritesAction","deleteFavouritesAction","api","FAVOURITES_KEY","fetchFromLocalStorage","dispatch","favouritsJSON","localStorage","getItem","favourites","JSON","parse","addFavourite","place","getState","prevFavourites","list","console","log","nextFavorites","some","favourite","id","setToLocalStorage","deleteFavourite","nextFavourites","filter","image","setItem","stringify"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,WAAhB;AACA,SACEC,mBADF,EAEEC,qBAFF,EAGEC,sBAHF,QAIO,UAJP;AAKA,MAAMC,GAAG,GAAG,IAAIJ,GAAJ,EAAZ;AAEA,MAAMK,cAAc,GAAG,gBAAvB;AACA,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AACzC,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAIC,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqBL,cAArB,CAApB;AACA,QAAIM,UAAU,GAAG,EAAjB;;AACA,QAAIH,aAAJ,EAAmB;AACjBG,MAAAA,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWL,aAAX,CAAb;AACD;;AACDD,IAAAA,QAAQ,CAACL,qBAAqB,CAACS,UAAD,CAAtB,CAAR;AACD,GAPD;AAQD,CATM;AAUP,OAAO,MAAMG,YAAY,GAAIC,KAAD,IAAW;AACrC,SAAO,OAAOR,QAAP,EAAiBS,QAAjB,KAA8B;AACnC,QAAIC,cAAc,GAAGD,QAAQ,GAAGL,UAAX,CAAsBO,IAA3C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BL,KAA7B;AACA,QAAIM,aAAa,GAAGJ,cAApB;;AACA,QAAG,CAACA,cAAc,CAACK,IAAf,CAAoBC,SAAS,IAAEA,SAAS,CAACC,EAAV,KAAiBT,KAAK,CAACS,EAAtD,CAAJ,EAA8D;AAC9DH,MAAAA,aAAa,GAAG,CAACN,KAAD,EAAQ,GAAGE,cAAX,CAAhB;AACC;;AACDQ,IAAAA,iBAAiB,CAACJ,aAAD,CAAjB;AACAd,IAAAA,QAAQ,CAACN,mBAAmB,CAACoB,aAAD,CAApB,CAAR;AACD,GATD;AAUD,CAXM;AAYP,OAAO,MAAMK,eAAe,GAAIF,EAAD,IAAQ;AACrC,SAAO,OAAOjB,QAAP,EAAiBS,QAAjB,KAA8B;AACnC,QAAIC,cAAc,GAAGD,QAAQ,GAAGL,UAAX,CAAsBO,IAA3C;AACA,UAAMS,cAAc,GAAGV,cAAc,CAACW,MAAf,CAAuBC,KAAD,IAAWA,KAAK,CAACL,EAAN,KAAaA,EAA9C,CAAvB;AACAC,IAAAA,iBAAiB,CAACE,cAAD,CAAjB;AACApB,IAAAA,QAAQ,CAACJ,sBAAsB,CAACwB,cAAD,CAAvB,CAAR;AACD,GALD;AAMD,CAPM;AAQP,OAAO,MAAMF,iBAAiB,GAAId,UAAD,IAAgB;AAC/CF,EAAAA,YAAY,CAACqB,OAAb,CAAqBzB,cAArB,EAAqCO,IAAI,CAACmB,SAAL,CAAepB,UAAf,CAArC;AACD,CAFM","sourcesContent":["import API from \"../../API\";\nimport {\n  addFavouritesAction,\n  fetchFavouritesAction,\n  deleteFavouritesAction,\n} from \"./action\";\nconst api = new API();\n\nconst FAVOURITES_KEY = \"FAVOURITES_KEY\";\nexport const fetchFromLocalStorage = () => {\n  return async (dispatch) => {\n    let favouritsJSON = localStorage.getItem(FAVOURITES_KEY);\n    let favourites = [];\n    if (favouritsJSON) {\n      favourites = JSON.parse(favouritsJSON);\n    }\n    dispatch(fetchFavouritesAction(favourites));\n  };\n};\nexport const addFavourite = (place) => {\n  return async (dispatch, getState) => {\n    let prevFavourites = getState().favourites.list;\n    console.log(\"prevFavourites\",place);\n    let nextFavorites = prevFavourites\n    if(!prevFavourites.some(favourite=>favourite.id === place.id)){\n    nextFavorites = [place, ...prevFavourites];\n    }\n    setToLocalStorage(nextFavorites);\n    dispatch(addFavouritesAction(nextFavorites));\n  };\n};\nexport const deleteFavourite = (id) => {\n  return async (dispatch, getState) => {\n    let prevFavourites = getState().favourites.list;\n    const nextFavourites = prevFavourites.filter((image) => image.id !== id);\n    setToLocalStorage(nextFavourites);\n    dispatch(deleteFavouritesAction(nextFavourites));\n  };\n};\nexport const setToLocalStorage = (favourites) => {\n  localStorage.setItem(FAVOURITES_KEY, JSON.stringify(favourites));\n};"]},"metadata":{},"sourceType":"module"}